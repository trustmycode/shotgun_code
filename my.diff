diff --git a/app.go b/app.go
index 81b212c..e247481 100644
--- a/app.go
+++ b/app.go
@@ -6,9 +6,11 @@
 	"errors"
 	"fmt"
 	"io/fs"
 	"os"
+	"os/exec"
 	"path/filepath"
+	goruntime "runtime"
 	"sort"
 	"strings"
 	"sync"

@@ -1035,6 +1037,55 @@
 	return nil
 }
 
+func (a *App) CheckCursorInstallation() (map[string]string, error) {
+	// On Windows, we need to check inside WSL.
+	if goruntime.GOOS == "windows" {
+		wslAgentPath := "~/.cursor/bin/cursor-agent"
+		// The `test -f` command will exit with 0 if the file exists, 1 otherwise.
+		cmd := exec.CommandContext(a.ctx, "wsl", "test", "-f", wslAgentPath)
+
+		err := cmd.Run()
+
+		if err == nil {
+			// Exit code 0 means file exists. We should return the full path.
+			out, errPath := exec.CommandContext(a.ctx, "wsl", "realpath", wslAgentPath).Output()
+			if errPath != nil {
+				// If realpath fails, we can fallback to the tilde path as it's still valid for execution.
+				runtime.LogWarningf(a.ctx, "Could not resolve real path for %s in WSL, falling back to tilde path: %v", wslAgentPath, errPath)
+				return map[string]string{
+					"status": "installed",
+					"path":   wslAgentPath,
+				}, nil
+			}
+
+			return map[string]string{
+				"status": "installed",
+				"path":   strings.TrimSpace(string(out)),
+			}, nil
+		}
+
+		if _, ok := err.(*exec.ExitError); ok {
+			// Command executed, but returned non-zero exit code. File not found.
+			runtime.LogInfof(a.ctx, "Cursor CLI not found in WSL: %v", err)
+			return map[string]string{"status": "not_installed"}, nil
+		}
+		// Some other error, like "wsl" command not found.
+		runtime.LogErrorf(a.ctx, "Error checking for Cursor CLI in WSL: %v", err)
+		return nil, fmt.Errorf("error running wsl command: %w", err)
+	}
+
+	// For macOS and Linux
+	homeDir, err := os.UserHomeDir()
+	if err != nil {
+		return nil, fmt.Errorf("could not get user home directory: %w", err)
+	}
+	agentPath := filepath.Join(homeDir, ".cursor", "bin", "cursor-agent")
+	if _, err := os.Stat(agentPath); err == nil {
+		return map[string]string{"status": "installed", "path": agentPath}, nil
+	} else if os.IsNotExist(err) {
+		return map[string]string{"status": "not_installed"}, nil
+	}
+	return nil, fmt.Errorf("error checking for cursor-agent: %w", err)
+}
+
 func (a *App) AssembleFinalPrompt(templateContent string, userTask string, rulesContent string, fileContext string) (string, error) {
     runtime.LogDebugf(a.ctx, "AssembleFinalPrompt called. Task len: %d, Rules len: %d, Context len: %d", len(userTask), len(rulesContent), len(fileContext))

diff --git a/frontend/wailsjs/go/main/App.d.ts b/frontend/wailsjs/go/main/App.d.ts
index 5410196..4198305 100644
--- a/frontend/wailsjs/go/main/App.d.ts
+++ b/frontend/wailsjs/go/main/App.d.ts
@@ -5,6 +5,8 @@
 
 export function AssembleFinalPrompt(arg1:string,arg2:string,arg3:string,arg4:string):Promise<string>;
 
+export function CheckCursorInstallation():Promise<{[key: string]: string}>;
+
 export function GetCustomIgnoreRules():Promise<string>;
 
 export function GetCustomPromptRules():Promise<string>;
 
diff --git a/frontend/wailsjs/go/main/App.js b/frontend/wailsjs/go/main/App.js
index 725807e..526027c 100644
--- a/frontend/wailsjs/go/main/App.js
+++ b/frontend/wailsjs/go/main/App.js
@@ -2,6 +2,18 @@
 // Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
 // This file is automatically generated. DO NOT EDIT
 
+export function AssembleFinalPrompt(arg1, arg2, arg3, arg4) {
+  return window['go']['main']['App']['AssembleFinalPrompt'](arg1, arg2, arg3, arg4);
+}
+
+export function CheckCursorInstallation() {
+  return window['go']['main']['App']['CheckCursorInstallation']();
+}
+
 export function GetCustomIgnoreRules() {
   return window['go']['main']['App']['GetCustomIgnoreRules']();
 }

diff --git a/tasks/2025-Q3/TASK-2025-006-backend-check-cli.md b/tasks/2025-Q3/TASK-2025-006-backend-check-cli.md
index 109968a..7800057 100644
--- a/tasks/2025-Q3/TASK-2025-006-backend-check-cli.md
+++ b/tasks/2025-Q3/TASK-2025-006-backend-check-cli.md
@@ -1,17 +1,23 @@
 ---
 id: TASK-2025-006
 title: "Задача 1.2: Реализация проверки установки Cursor CLI"
-status: backlog
+status: done
 priority: high
 type: feature
 estimate: 2h
 assignee: "@unassigned"
 created: 2025-09-03
-updated: 2025-09-03
+updated: 2025-09-04
 parents: [TASK-2025-004]
 arch_refs: [ARCH-BACKEND-CLI-MANAGER]
 audit_log:
   - {
       date: 2025-09-03,
       user: "@AI-DocArchitect",
       action: "created with status backlog",
     }
+  - {
+      date: 2025-09-04,
+      user: "@Robotic-SSE",
+      action: "implemented CheckCursorInstallation; status changed to done",
+    }
 ---
 
 ## Описание
